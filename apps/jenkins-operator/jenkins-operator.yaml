apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: jenkins-operator
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    repoURL: 'https://raw.githubusercontent.com/jenkinsci/kubernetes-operator/master/chart'
    targetRevision: 0.6.0
    chart: jenkins-operator
    helm:
      values:
        jenkins:
          enabled: true
          apiVersion: jenkins.io/v1alpha2
          name: jenkins
          namespace: jenkins
          labels: {}
          annotations: {}
          image: jenkins/jenkins:2.319.1-lts-alpine
          env:
          - name: JAVA_OPTS
            value: "-Xmx2048m -XX:MaxPermSize=512m -XX:MinRAMPercentage=10.0 -XX:MaxRAMPercentage=80.0 -Djenkins.install.runSetupWizard=false -Djava.awt.headless=true"
          imagePullPolicy: Always
          priorityClassName: ""
          disableCSRFProtection: false
          validateSecurityWarnings: false
          imagePullSecrets: []
          notifications: []
          serviceAccount:
             annotations: {}
          basePlugins:
          - name: kubernetes
            version: "1.31.2"
          - name: workflow-job
            version: "1145.v7f2433caa07f"
          - name: workflow-aggregator
            version: "2.6"
          - name: git
            version: "4.10.0"
          - name: job-dsl
            version: "1.78.1"
          - name: configuration-as-code
            version: "1.55"
          - name: kubernetes-credentials-provider
            version: "0.20"
          plugins: []
          seedJobs: []
          resources:
            limits:
              cpu: 1000m
              memory: 5Gi
            requests:
              cpu: 1
              memory: 4Gi
          volumes:
          - name: backup # PVC volume where backups will be stored
            persistentVolumeClaim:
              claimName: jenkins-backup
                namespace: jenkins-operator
          volumeMounts: []
          authorizationStrategy: createUser
          securityContext:
            runAsUser: 1000
            fsGroup: 1000
          livenessProbe:
            failureThreshold: 20
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 200
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 8
          readinessProbe:
            failureThreshold: 60
            httpGet:
              path: /login
              port: http
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 8
          backup:
            enabled: true
            image: virtuslab/jenkins-operator-backup-pvc:v0.1.0
            containerName: backup
            interval: 30
            makeBackupBeforePodDeletion: true
            backupCommand:
              - /home/user/bin/backup.sh
            restoreCommand:
              - /home/user/bin/restore.sh
            getLatestAction:
              - /home/user/bin/get-latest.sh
            pvc:
              enabled: true
              size: 5Gi
              className: ""
            resources:
              limits:
                cpu: 1000m
                memory: 2Gi
              requests:
                cpu: 100m
                memory: 500Mi
            env:
              - name: BACKUP_DIR
                value: /backup
              - name: JENKINS_HOME
                value: /jenkins-home
              - name: BACKUP_COUNT
                value: "3" # keep only the 3 most recent backups
            volumeMounts:
              - name: jenkins-home
                mountPath: /jenkins-home # Jenkins home volume
              - mountPath: /backup # backup volume
                name: backup
          configuration:
            configurationAsCode: {}
            groovyScripts: {}
            secretRefName: ""
            secretData: {}
        operator:
          replicaCount: 1
          image: virtuslab/jenkins-operator:v0.7.0
          imagePullPolicy: IfNotPresent
          imagePullSecrets: []
          nameOverride: ""
          fullnameOverride: ""
          resources: {}
          nodeSelector: {}
          tolerations: []
          affinity: {}
        webhook:
          certificate:
            name: webhook-certificate
            duration: 2160h
            renewbefore: 360h
          enabled: false
        cert-manager:
          startupapicheck:
            enabled: false
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: jenkins-operator
  syncPolicy:
    automated: # automated sync by default retries failed attempts 5 times with following delays between attempts ( 5s, 10s, 20s, 40s, 80s ); retry controlled using `retry` field.
      prune: true # Specifies if resources should be pruned during auto-syncing ( false by default ).
      selfHeal: true # Specifies if partial app sync should be executed when resources are changed only in target Kubernetes cluster and no git change detected ( false by default ).
      allowEmpty: false # Allows deleting all application resources during automatic syncing ( false by default ).
    syncOptions:     # Sync options which modifies sync behavior
      - Validate=false # disables resource validation (equivalent to 'kubectl apply --validate=false') ( true by default ).
      - CreateNamespace=true # Namespace Auto-Creation ensures that namespace specified as the application destination exists in the destination cluster.
      - PrunePropagationPolicy=foreground # Supported policies are background, foreground and orphan.
      - PruneLast=true # Allow the ability for resource pruning to happen as a final, implicit wave of a sync operation
    # The retry feature is available since v1.7
    retry:
      limit: 5 # number of failed sync attempt retries; unlimited number of attempts if less than 0
      backoff:
        duration: 5s # the amount to back off. Default unit is seconds, but could also be a duration (e.g. "2m", "1h")
        factor: 2 # a factor to multiply the base duration after each failed retry
        maxDuration: 3m # the maximum amount of time allowed for the backoff strategy
